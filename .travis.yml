matrix:
  include:    
    - language: c  
      sudo: false # only for faster builds  
      compiler:
        - clang
        - gcc
      script:  
        - gcc -o testasdasd testasdasd.c 
        - ./testasdasd 
        - gcc -o fact fact.c
        - ./fact
        - gcc -o demo demo.c
        - ./demo
    - language: cpp  
      compiler: gcc  
      dist: trusty  
      before_install:  
       - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
       - sudo apt-get update -qq  
      install:   
       - sudo apt-get install -qq g++-6  
       - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90  
      script:   
        - g++ swap.cpp -std=c++17 -o travis_gcc_cpp17  
        - ./travis_gcc_cpp17 
        - g++ pyra.cpp -std=c++17 -o travis_gcc_cpp17 
        - ./travis_gcc_cpp17 
    - language: java
      jdk: oraclejdk8
      script: 
        - javac test.java
        - java test
        - javac Fact.java
        - java Fact
    - language: python
      python: 3.6
      cache: pip
      before_script:
       - easy_install distribute
       - pip install -r requirements.txt
      script: 
       - python test.py
       - python fact.py
    - language: ruby
      sudo: false
      script: 
       - ruby hello.rb
       - ruby test.rb
      rvm:
       - 1.9.3
       - 2.0
       - 2.1
       - 2.2
       - 2.3
       - ruby-head
      notifications:
      email: false
    - language: csharp
      solution: "./Fibonacci/Fibonacci.sln"
      install:
       - travis_retry nuget restore -source "https://www.nuget.org/api/v2" ./Fibonacci/Fibonacci.sln
      script:
       - xbuild ./Fibonacci/Fibonacci.sln
       - mono ./Fibonacci/packages/xunit.runner.console*/tools/xunit.console.exe ./Fibonacci/Fibonacci.Tests/bin/Debug/Fibonacci.Tests.dll
    - language: node_js
      node_js:
       - "node"
      env:
       - MY_VAR=EverythignIsAwesome
       - NODE_ENV=TEST
    - language: scala
      scala:
       - 2.11.7
    - language: php
      php:
       - 5.3
       - 5.4
       - 5.5
       - 5.6
       - hhvm
      matrix:
        fast_finish: true
        allow_failures:
          - php: hhvm
      mysql:
        database: travis_ci_drupal_module_example_test
        username: root
        encoding: utf8
      before_install:
         - sudo apt-get update > /dev/null
      install:
        - sudo apt-get install -y --force-yes php5-cgi php5-mysql
        - export PATH="$HOME/.composer/vendor/bin:$PATH"
        - composer global require drush/drush:6.*
      before_script:
  # navigate out of module directory to prevent blown stack by recursive module lookup
        - cd ../..

  # create new site, stubbing sendmail path with true to prevent delivery errors and manually resolving drush path
        - mysql -e 'create database travis_ci_drupal_module_example_test'
        - php -d sendmail_path=`which true` ~/.composer/vendor/bin/drush.php --yes core-quick-drupal --profile=testing --no-server --db-url=mysql://root:@127.0.0.1/travis_ci_drupal_module_example_test --enable=simpletest travis_ci_drupal_module_example_test

  # reference and enable travis_ci_drupal_module_example in build site
        - ln -s $(readlink -e $(cd -)) travis_ci_drupal_module_example_test/drupal/sites/all/modules/travis_ci_drupal_module_example
        - cd travis_ci_drupal_module_example_test/drupal
        - drush --yes pm-enable travis_ci_drupal_module_example

  # start a web server on port 8080, run in the background; wait for initialization
         - drush runserver 127.0.0.1:8080 &
         - until netstat -an 2>/dev/null | grep '8080.*LISTEN'; do true; done

      script: drush test-run 'Travis-CI Drupal Module Example' --uri=http://127.0.0.1:8080


 
